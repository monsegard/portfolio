Описание функции critical_path 
В данную функцию входят еще пару функций таких как:
d_sor() -> данная функция сортирует входной массив данных по строкам от меньшего к большему по number_work
time_avg() -> недоделанная функция
search_fork -> функция которая ищит развилки(повторения).Cравнивает сначала значения перед собой
,иначе после себя (если равняется, то 1 в обоих случаях).
Если в обоих случаях текущие значение не равно следующиму или предыдущиме, то ставит 0.

Идея функции по поиску критического пути состоит в том, чтобы мы прошлись по всем возможным путям в массиве
функция глобально имеет один цикл while true в котором вложенно два if
	1 if проверяет дошли ли мы до конца пути 
	если да, то суммируется последняя работа и записывается в массив.Далее идёт проверка на количество пройденных путей
	если кол-во равно =sum(fork)-1 то мы нашли всвозможные пути.
	2 if проверяет стоит наш count на развилке (1) или нет 
	если да, то мы входим в ещё один цикл while true, где support_work(count) == number_work(count_s)
	мы это делаем для того чтобы найти следующие значения в пути. Если мы перебрали все значения (count_s)
	и не нашли нужного, то мы зануляем последний переход попутно обнуляя path и возвращения исходного значеня
	count. Else тот же цикл while true, но он запоминает последний переход по развилке (fork). Для того чтобы
	если мы зайдём в тупик(для того чтобы пройти по всем развилкам подряд нужно их занулить), но может полуится 
	так, что по части одного и того пути нужнно пройти дважны и поэтому мы так же вводим переменную number_wn 
	которая хранит изначальный массив с занулённым тупиковым значением.