Введение
Перед началом планирования сложных процессов люди обычно используют план для того, чтобы структурировать и оценить время исполнения работы в целом и каждого отдельного подэтапа выполнения работы. Цель сетевого планирования - построить модель реализации некоторого проекта наиболее логично, правильно, эффективно, с наименьшими затратами. Для реализации такого подхода необходимо сформировать комплекс работ, задать их очередность, определить необходимые ресурсы, сформулировать задачи, которые должны быть решены в заданной последовательности для достижения конечной цели проекта. В итоге необходимо добиться сокращения до минимума продолжительности проекта и затрат на его выполнение. Благодаря сетевой модели можно понять какие именно работы необходимо произвести для получения желаемого результата, сколько людей будет задействовано, какое количество ресурсов необходимо и сколько это примерно займет по времени. 
Очевидно, что в реальной жизни для планирования столь сложной работы не всё всегда точно известно. Например, не ясно сможет ли соисполнитель в требуемый срок поставить некоторый материал, или предоставить определенную услугу. По неизвестным причинам может произойти задержка перевозки груза. Наконец, может произойти и форсмажор, которого. скорее всего, нельзя запланировать заранее. Иными словами, в реальной жизни всегда имеет место элемент неопределенности. Не учитывать его нельзя, ибо рано или поздно произойдет провал запланированного дела, с соответствующими материальными, и иными, издержками и потерями, вплоть до полного банкротства предприятия. 
По указанным причинам тема работы: «Сетевое планирование в условиях неопределенности» является чрезвычайно актуальной. 
	Цель работы исследование вопросов сетевого планирования в условиях неопределённости.
	В рамках поставленной цели, в работе решаются следующие задачи:
	исследование и проведение сравнительного анализа существующих методов сетевого планирования;
	анализ существующих моделей сетевого планирования;
	анализ известных подходов к сетевому планированию в условиях неопределенности;
	разработка алгоритма и компьютерной программы, реализующей оптимальное время выполнения процесса сетевого планирования в условиях неопределенности;
	разработка имитационной модели для проверки исследований;
	анализ результатов моделирования.
Объектом исследования - Сетевое планирование.
Предметом исследования -благоустройства города Тверь.
В первой главе определено содержание методов сетевого планирования, правила построения и упорядочивания, временные параметры сетевого графика.
Во второй главе даны основные определения сетевого графика в условиях неопределённости, проанализированы основные модели сетевого планирования, в частности детерминированные модели (Ганта и метод критического пути) и вероятностные модели (метод оценки и анализа программ, метод имитационного моделирования или метод Монте-Карло, метод графической оценки и анализа программ)  и проведён их сравнительный анализ. 
В третьей главе описана и разработана с использованием пакета прикладных программ MATLAB для более точной оценки времени каждой отдельной работы и времени выполнения всего сетевого плана.


	Сетевое планирование и правила построения сетевого графика
Сетевое планирование (сетевой анализ) — совокупность прикладных методов управления проектами, обеспечивающая планирование, анализ сроков выполнения частей проектов, с увязкой выполнения различных работ и процессов во времени. 
	Основные понятия сетевой модели 
Сетевая модель — это план выполнения определенной совокупности зависимых работ, данный в особенной форме сети.
 Сетевой график – это графическое представление сетевой модели
Понятие работа применяется в СПУ во всеобъемлющим смысле.
	Действительная работа – это длительный процесс, для которого нужны  определенные траты на материалы. Для каждой действительной работы должен быть определен ответственный и она должна быть  точно описана 
	Ожидание – это длительный процесс, для которого не требуются траты на труд.
	Зависимость – это логическая связь между определёнными работами, не требующая затрат на труд, ресурсы или время выполнения. Она показывает, что одна работа прямо зависит от вывода другой работы.
Событие – это момент окончание любого из процессов, показывающий определённый этап реализации проекта. Так же событие может быть, как результатом отдельной работы, так и итоговым результатом нескольких работ. Событие совершится только если все предыдущие работы уже закончены. Последующие работы начнутся только, когда событие произойдет. У события нет продолжительности работ и совершается оно без задержки.
Так же стоит отметить исходное и завершающее события.
Исходное событие не имеет предшествующих работ и событий.
У завершающего события нет последующих работ и событий.
Все события на сетевом графике изображаются кружками
Работы – стрелками
 
Рис. 1. Пример реализации события в сетевом графе

 
 
Рис. 2
На рисунке 2 , а изображен сетевой график задачи моделирования и построения оптимального плана. Для решения данной задачи необходимо использовать следующие работы : 
А – Формулировка проблемы исследования
Б – Постройка математическую модель
В – Сбор информации
Г – Выбрать метод решения задачи
Д – Запрограммировать и отладить программу 
Е – Подсчитать оптимальный план
Ж – Отдать результаты работы заказчику 
События обозначены цифрами на графике к ним приводит выполнения соответствующих работ.
На графике видно, что работы В и Г можно начать выполнять независимо друг от друга, но только после окончания события 3 то есть после выполнения работ А и Б. Работу Д -после окончания события 4, когда закончены работы А,Б,В,Г , а работу Е выполнить после установления события 5 то есть  при выполненных всех предыдущих работ  А,Б,В,Г,Д
Сеть называется структурной если в сетевой модели нет числовых оценок. 
	Правила построения сетевой модели
Сетевые графики строятся на первом этапе планирования. Изначально составляется процесс и перечь работ и событий, рассчитывают их логические связи и последовательность, в которой они будут выполнятся. С их помощью оценивается продолжительность работ. Далее составляется сетевой график. После построения сетевого графика считают параметры события и работ, выбирают резервы времени и критический путь. Далее проводят анализ и оптимизацию сетевого графика. При надобности график вычеркивается и заново составляется с учётом пересчитанных параметров событий и работ.
Правила, которые необходимо соблюдать при построении графика:
	Не должно быть “Тупиковых” событий в сетевой модели. То есть событий, из которых не выходит ни одна из работ, кроме завершающего события
 
Рис.3. Сетевая модель с “тупиковым” событием

	Не должно быть “хвостовых” событий в сетевом графике (если это только не исходное), которым не предшествует ни одна из работ.
 
Рис.4. Сетевая модель с “хвостовым” событием

	Не должно быть замкнутых контуров и петель, то есть путей, соединяющих определённые события с ними же.
 
Рис.5. Сетевая модель с замкнутым событием и петлёй

	Каждые два события должны быть непосредственно связаны не более одной стрелкой-работой. При нарушении данного правила может произойти путаница, так как две разные работы имеют одно и то же обозначение. Для избежание  данной проблемы рекомендуется вводить фиктивные события. Данные события не требуют времени выполнения и обозначаются пунктирными линиями 
 
Рис.6. Сетевая модель с нарушением  в построении и его исправленная копия с вводом фиктивного события
	Рекомендуется в сети иметь одно начальное и одно заключительное событие. Если в получившейся сети не так, то  следует вводить фиктивную работу. 
Фиктивная работа так же может помочь при отражении зависимости событий, не связанных с реальными работами. Или для того, чтобы отражать реальную отсрочку и ожидание.
 
Рис.7. Сетевая модель без  использования рекомендации и с использованием

1.3. Правила упорядочивания сетевого графика
Допустим, что при реализации определённого проекта имеется 12 событий:0,1,2,3,4,5,6,7,8,9,10,11 и 24 и работы, с которыми они связаны:
(0,1), (0,2), (0,3), (1,2), (1,4), (1,5), (2,3), (1, 5), (2, 3), (2, 5), (2, 7), (3, 6), (3, 7), (3, 10), (4, 8), (5, 8), (5, 7), (6, 10), (7, 6), (7, 8), (7, 9), (7, 10), (8, 9), (9, 11), (10, 9), (10, 11).Нужно составить и упорядочить сетевой график.
Начальным событием сетевого графика значится событие 0 (так как данному события не предшествует ни одна из работ), а оканчивающим – событие 11 (так как за данным событием не следует ни одна из работ). Полагая на сетевом графике изменение времени слева направо, поместим событие 0 в левую часть графика, а событие 11 в правую часть, предварительно расположив между ними промежуточные события в соответствии их номерам. Работы-стрелки будут связывать наши события в соответствие с перечнем работ. 
 
Рис.8 Построенный сетевой график

Упорядочение сетевого графика состоит в том, чтобы расположить события и работы в таком порядке, чтобы для любой работы предшествующее ей событие, расположенное левее, и имеет меньший номер по сравнению с событием, завершающим эту работу.
Иными словами, в упорядоченном сетевом графике все работы-стрелки идут слева направо: от события с наименьшим номером к событиям с большим номером.
Для начала разобьём сетевой график на пару вертикальных слоев (их мы обведём пунктирной линией и обозначим римскими цифрами)
В первый слой поместим начальное событие 0 и вычеркнем его из графика и все работы-стрелки, выходящие из него. Без события I и без входящих стрелок у нас образуется II слой. Мысленно вычеркнув событие 1 и все выходящие работы, увидим, что события 4 и 2 образуют III слой. Продолжаем данную процедуру вычеркивая и получая слои: IV с событиями 5 и 3, V с событием 7, VI с событием 8 и 6, VII с событием 10,  
VIII с событием 9  и IX с событием 11
 
Рис. 9 сетевой график с вертикальными слоями
На данном графике видим, что изначальная нумерация событий не совсем корректная так как событие 6 в VI слое имеет номер меньший, чем событие 7. Исправив нумерацию событий в соответствии с их расположением на графике сможем получить упорядоченный график. 
 
Рис. 10 Упорядоченный график
Путь –любая последовательность работ, в которой заключительное событие каждой работы совпадает с начальным событием следующей за ней работы. Есть различные пути сетевого графика, но наибольший интерес видеться полный путь L – любой путь, который начало которого совпадает с изначальным событием сети, а конец – с конечным.
Критический путь – это наиболее длительный путь в сетевом графике. Данное определение распространяется и на работы и события, расположенные на этом пути.

Выводы.
1. Сетевое планирование представляет собой совокупность прикладных методов управления проектами, обеспечивающая планирование, анализ сроков выполнения частей проектов, с увязкой выполнения различных работ и процессов во времени.
2. Основными правилами построения сетевого графика являются:
- сетевые графики строятся на первом этапе планирования;
- при построении графика не должно быть “Тупиковых” событий то есть событий, из которых не выходит ни одна из работ, кроме завершающего события;
- не должно быть “хвостовых” событий
- не должно быть замкнутых контуров и петель
- каждые два события должны быть непосредственно связаны не более одной стрелкой-работой; 
3. Сетевой график  должен быть упорядочен по определённым правилам:
- начальному событию сетевого графика не должно предшествовать  ни одна из работ;
- расположить события и работы следует в таком порядке, чтобы для любой работы предшествующее ей событие, располагалось левее, и имело меньший номер по сравнению с событием, завершающим эту работу;



 
2. Сетевое планирование в условиях неопределённости
2.1. Понятие и виды неопределённости в сетевом графе.
Неопределённость — это отсутствие или недостаток информации о чём-либо. Неопределенность в моделировании имеет свою специфику. Следует различать ошибку моделирования и неопределенность. 
Источники ошибок моделирования: сознательно введенные исследователем (например, аппроксимация математической модели) и возникшие в процессе моделирования. 
Неопределенность вызвана недетерминированными источниками, например, внешней средой, лицом, принимающим решение, форсмажорными обстоятельствами. Анализ неопределенности при моделировании крайне важная задача, обеспечивающая получение требуемого качества работы. 
Факторы, влияющие на неопределённость:
• Неполнота данных — это неточность информации о параметрах, ситуациях, требующих выбора оптимального решения. Когда невозможно адекватно и точного учёта информации.
• Фактор случайности — это фактор, возникновение которого невозможно предусмотреть заранее даже в вероятностной оценке.
В сетевом планировании  существует несколько типов неопределённости:
• статистическая неопределённость;
• стохастическая неопределённость.
Статистическая неопределённость – это неопределённость возникает в связи с неопределенными свойствами исходной информации, необходима для выполнения расчётов по определенному типу данных.
При стохастической неопределённости известны только вероятностные характеристики входящих в задачу случайных факторов.
Неопределенности могут возникать по причинам нечетко сформулированных целей функционирования системы, неопределенности определения её структуры, неопределенности исходных данных. 
Все виды неопределенностей необходимо по возможности компенсировать. Для этого на этапе планирования:
- следует исключить недостижимые цели и принять все возможные меры для четкого определения слабо определённых промежуточных целей;
- учесть вероятности выхода из строя физических элементов системы: возможность поломки машин, механизмов, аварий и т.п.;
- учесть возможность изменения ситуации в системе верхнего уровня (прогнозирование внешней среды). Так, например, следует учесть возможнотсь повышения цен на топливо, если такая тендениця имеет место систематически, инфляцию используемой валюты, принятие законодательных актов, изменяющих ценообразование, налоговую политику;
- следует учесть предсказуемость клиентов и исполнителей. 
2.2 Сравнительный анализ методов сетевого планирования.
Методы в сетевом планировании разделяются на два типа, это детерминированные и вероятностные.
Детерминированные, это те модели в которых продолжительность и последовательность работ задана однозначно. Одна из самых популярных детерминированных диаграмм является диаграмма Ганта и метод критического пути. 
Вероятностные модели, это такие модели, где продолжительность работ точна неизвестна или могут возникнуть непредвиденные ситуации такие как: погодные условия, ненадежные поставщики, результат научного эксперимента. Вероятностные модели делятся на два типа: неальтернативные и альтернативные.
Неальтернативные модели, это модели в которых зафиксирована последовательность выполнения работ, а продолжительность работ определяется функциями распределения.
Альтернативные модели, это модели в которых продолжительность и связи между всеми или некоторыми работами носят вероятностный характер.
Детерминированные модели имеет смысл применять, когда продолжительность и последовательность работ в сетевом графе задана однозначно. 
Рассмотрим три распространенных метода вероятностного сетевого планирования:
	метод оценки и анализа программ (PERT);
	метод имитационного моделирования или метод Монте-Карло;
	метод графической оценки и анализа программ (GERT).
2.2.1 Метод оценки и анализа программ.
Метод оценки и анализа программ (PERT) – используется для очень масштабных и сложных проектов. Он был разработан для упрощения планирования на бумаге и составления графиков больших и сложных проектов. Метод нацелен на анализ времени выполнения для каждой отдельной задачи и для определения минимального времени для выполнения проекта полностью. 
Диаграмма представляет собой некоторое множество точек-вершин с соединяющими их ориентированными дугами. Любой дуге, которая рассматривается, как работа прописывают  две характеристики это объём выделенных на данную работу ресурсов и длительность. Каждая вершина интерпретируется как событие окончания работ дугам которые входят в неё и одновременно начала работ из исходящих дуг. Таким образом следует, что ни одна работа не начнётся пока не будут выполнены все предшествующие ей. В каждой диаграмме должно быть начало — это вершина без входящих дуг и окончание – это вершина без исходящих дуг. У всех остальных должны быть и те и другие дуги.
 
Рис.11. Пример диаграммы PERT. Продолжительностью 7 месяцев. С 5 промежуточными точками.

2.2.2 Метод имитационного моделирования.
 Метод имитационного моделирования используется, когда известны статистические параметры модели. Тогда выполняется многократный прогон модели и идёт подсчёт основных характеристик модели. Благодаря большому количеству испытаний мы можем более точно определить закономерности моделируемой сети. Но имитационное моделирование не может предоставить решение в том виде как это представлено в аналитических моделях. Они служат для анализа системы в условиях, которые ей задал экспериментатор.	Данный вид моделирования является одним из методов решения поставленной задачи и для его выбора необходима определённых обоснований. Например: 
	Когда возникает надобность получить информацию о системе, которую невозможно получить в известных источниках
	Когда происходит экспериментирование  на реальной системе если необходимо обеспечить соответствие между моделью и реальными условиями.
Критерии, которым должна удовлетворять хорошая модель:
	простота и понятность;
	надежность;
	удобна в управлении и обращении;
	адаптивность.
Этапы использования имитационного моделирования:
	Сначала выделяют основные черты модели.
	Создают и модифицируют имитационную модель.
	Эксплуатируют и выводят результаты модели.
2.2.3 Метод графической оценки и анализа программ.
Метод оценки и анализа программ (PERT) используется тогда, когда последующие задачи могут начинаться после выполнения некоторого числа предшествующих задач, причем не все работы на сетевой модели должны быть завершены для завершения проекта. Данный способ помогает упростить сложные процессы производства, когда сложно или невозможно определить какие именно работы и в какой последовательности должны быть выполнены для достижения результата.
В GERT каждое действие описано стрелкой. Для соединения действий, определение типа и условий отношений  используют узлы. Каждая задача имеет два параметра: продолжительность и вероятность появления.
Так же в GERT применяются три логических оператора которые касаются действий, идущих на узел:
	XOR - альтернатива (есть только один путь)
	OR - альтернатива (может быть выполнен один или несколько путей)
	И - должны быть выполнены все пути
 Рис.12.Пример GERT. С логическим оператором OR
Выводы.
1. Неопределённость — это отсутствие или недостаток информации о чём-либо. Факторами, влияющими на неопределённость являются: неполнота данных, фактор случайности, 
2. В сетевом планировании существует несколько типов неопределённости: статистическая неопределённость и стохастическая неопределённость. Все виды неопределенностей необходимо по возможности компенсировать.
3. В сетевом планировании применяют два типа методов: детерминированные и вероятностные. Детерминированные, это те модели в которых продолжительность и последовательность работ задана однозначно. Вероятностные модели, это такие модели, где продолжительность работ точна неизвестна или могут возникнуть непредвиденные ситуации
4. Наиболее часто применяются три распространенных метода вероятностного сетевого планирования:
	метод оценки и анализа программ (PERT);
	метод имитационного моделирования или метод Монте-Карло;
	метод графической оценки и анализа программ (GERT).

 
3. Программная реализация сетевого графа
3.1. Описание модели
Не всегда так происходит, что время выполнения каждой работы точно известно и может принимать лишь одно из возможных значений. Иначе говоря, продолжительность работ t(i,j) является случайной величиной, определённая своим законом распределения, числовыми характеристиками, своим средним или математическим ожиданием t ̅(i,j) и дисперсией σ^2 (i,j).
Предположим, что в нашем проекте используется на выбор пользователя:
	равномерное распределение;
	наихудший вариант.
Равномерное распределение применяют тогда, когда среди принимаемых случайных величинами значений нет предпочтительных. Обычно считают, что события с одинаковой вероятностью могут происходить в любой момент времени. 
Определение: Непрерывная случайная величина X имеет равномерное распределение на интервале [a,b] если на интервале плотность распределения случайной величины постоянна, а за его пределами равна нулю
f(x)={█(■(0&x<a)@■(1/(b-a)&a<x<b)@■(0&x>b))┤ 					(1)
 
Рисунок 13. - График плотности f(x) равномерного распределения
Функция распределения F(x) для равномерного распределения имеет вид
F(x)={█(■(0&x<a)@■((x-a)/(b-a)&a<x<b)@■(1&x>b))┤				(2)
График функции  F(x) представлен  на рисунке__.
 
Рис.14 График функции  F(x) равномерного распределения
Вероятность попадания случайной величины X имеющие равномерное распределение на отрезке [α-β], являющегося частью участка [a,b] находится по формуле
P(α<x<β)=∫_α^β▒〖1/(b-a) dx=(β-α)/(b-a)〗	.			(3)
	Если же мы используем метод гарантированного результата или наихудший вариант, то этап имитационного моделирования пропускается и будем считать, что все работы будут выполнятся максимально допустимое время. Данный метод может быть полезен, чтобы оценить максимальное время требующиеся на выполнения каждой отдельной работы и всего проекта в целом.
Когда мы привели модель к детерминированному виду нужно убедиться, что все работы будут выполнены в срок. Для этого делают оценку вероятности успеть закончить проект в срок:
 			(4)
На рисунке__ показан результат применения данной оценки (в заштрихованной области)
 
Рис.15 результат применения P(tкрT)

где: tкр –длина критического пути; 
Ф – значения интеграла вероятности Лапласа; 
Т - Максимальный срок выполнения проекта;
σкр -  среднеквадратичное отклонение длины критического пути.
Если в задаче нам неизвестно Т, то его можно найти по формуле:
 					(5)
где:  - нормальное отклонение случайной величины, определяемая с помощью функции Лапласа.
Если нам неизвестно σ2кр, то можно его найти по формуле:
 				(6)
 					(7)
 						(8)
Аналогично находится по формуле и σ2.
Если P(tкрT) ≤ 0,3 то можно сказать c высокой вероятностью, что работа не будет закончена в срок и нужно прибегать к перераспределению ресурсов, пересмотр состава работ, оптимизации сетевого графа. 
Если 0,3 < P(tкрT) < 0,8 то можно сказать о средней вероятности успеха закончить работы в срок.
Если P(tкрT)  0,8 то достаточно очевидно, что с высокой вероятностью работа будет закончена в срок.
В проекте используются основные статистические точечные оценки:
	оценка генеральной средней продолжительности работы
x ̅_в=∑_(i=1)^n▒x_i/n						(9)
где x_i=элемент выборки, i=¯(1,n); n – объём выборки;
	выборочная дисперсия
D_в=∑_(i=1)^n▒〖(x_i^2)/n-x ̅_в^2 〗					(10)
	несмещённая оценка дисперсии
S^2=n/(n-1)*D_в					(11)
	среднеквадратичное отклонение 
S=√(n/(n-1)*D_в )					(12)
	смещённая оценка СКО
σ_n=√(D_в )						(13)
Так же в проекте построен доверительный интервал с выбранным уровнем статистической значимости. Так как у нас закон распределения, по которому мы моделируем значения не нормальный, то используем t - распределение. Данная методика имеет более широкий доверительный интервал по сравнению с методикой, базирующейся на Z-оценке.
	Для расчета нижнего и верхнего предела доверительного интервала на основании t-распределения применяют следующие две формулы:
 					(14)
 					(15)
где: 	 – оценка генеральной средней продолжительности работы;
α – уровень статистической значимости;
n – объём выборки;
 –  Критерий Стьюдента для уровня значимости и количества степеней свободы (n-1);
 – Среднеквадратичное отклонение.

3.2. Программная реализация
Вышеописанная модель реализована с использованием пакета прикладных программ для решения технических задач и вычислений – MATLAB.
Входными данными программы является: заполненный документ формата .csv. В документе заполняются первые четыре столбца:
	А – номер работы (number_work);
	B – опорная работа (support_work);
	C – ранний срок окончания работы (er_time);
	D – поздний срок выполнения работы (lr_time), если работа точно определена, то ставится “0”.
Выходными данными являются: оптимальное время выполнения для каждой отдельной работы и всей работы в целом, оценка вероятности выполнения всей работы в срок. Так же программа выдает упорядоченные данные из документа, выдает количество дней для выполнения всей работы и возможные простои на некритических путях. Для визуализации данных строится сетевой граф с выделенным критическим путём полученных из документа.
Блок-схема программы показана на рисунке 16
 
Рис.16 Блок-схема программы
Схема системы по упорядочиванию массива данных, приведение к детерминированному виду, построению критического пути, расчёт вероятности, расчёт статистических оценок и вывод итогов. Некоторые блоки более детально расписаны на последующих блок-схемах:
Блок-схема сортировки данных массива по первому столбцу представлена на Рис.17
 
Рис.17 Блок-схема сортировки данных.
В блок-схеме используются следующие обозначения:
	Count – счётчик для перемещения по массиву данных
	Count_s – счётчик для поиска нужных элементов в массиве





Блок-схема привидения данных к детерминированному виду представлена на Рис.18
 
Рис.18Блок-схема привидения данных к детерминированному виду.


 
Блок-схема нахождения развилок для графа представлена на Рис.19
 
Рис.19 Блок-схема нахождения развилок для графа (используется в модуле нахождения критического пути)

 
Блок-схема нахождения критического пути в графе представлена на Рис.20
 
Рис.20 Блок-схема нахождения критического пути в графе
В блок-схеме используются следующие обозначения:
	sp → support_work – данные из второго столбика документа .csv
	nw →number_work – данные из первого столбика документа .csv
	transition – равняется значению счётчику, когда делаем переход по развилке
	 path – значения по которому мы суммируем работы идя по пути

Блок-схема расчёта вероятности успеть вовремя закончить все работы представлена на Рис.21
 
Рис.21 Блок-схема расчёта вероятности

 
3.3. Вычислительный эксперимент
В качестве примера для вычислительного эксперимента были взяты данные с официального сайта администрации города Тверь. Документ, по которому выполнен вычислительный эксперимент называется: “Постановление Администрации Города Твери от 30.03.2021 №371_371_30_03_2021”. В данном документе описывается план по санитарной обработке и благоустройству территории города Твери в 2021 году. В перечень входят:
	санитарная очистка;
	уборка объектов потребительского рынка и примыкающих к ним территориям;
	ремонт малых архитектурных форм;
	ликвидация навалов мусора;
	ремонт контейнерных площадок;
	уборка аварийных деревьев, сучьев и поросли;
	посадка деревьев и кустарников.
У данного плана есть срок выполнения всей работы с 30 марта 2021 по 28 мая 2021. Так и у каждой отдельной работы есть определённый промежуток выполнения работ. Список всех работ и их промежуток исполнения представлен на таблице 1.

 
Таблица 1. – Исходные данные для моделирования
1	2	1	6
2	3	10	0
3	4	7	0
4	5	7	0
5	6	21	0
6	12	6	0
2	7	18	34
7	12	11	17
2	8	14	21
8	9	15	21
9	12	7	10
2	12	28	51
2	10	14	30
10	12	14	20
2	11	7	14
11	12	7	15
12	13	6	12
Данная таблица переносится в файл с расширением .csv. Файлу присваивается имя и переносится в корневой каталог с проектом.
Код программы представлен в приложении 1.

 
Пользовательский интерфейс представлен на Рис.22
 
Рис.22 Пользовательский интерфейс
При первом запуске пользователю нужно ввести название документа с расширением .csv. При необходимости можно выбрать количество испытаний и уровень значимости для доверительного интервала. Как альтернатива Имитационному моделированию можно выбрать “наихудший вариант”. Когда мы ввели все необходимые входные переменные нажимаем кнопку “Рассчитать”. Результат продемонстрирован на Рис.23 


 
Рис.23 Пользовательский интерфейс с выходными данными
На рисунке 23 показан результат работы программы. 
Выходные данные. Упорядоченные данные по первому столбцу (левая колонка), построенный сетевой граф с выделенным критическим путём. Посчитанные статистические оценки  такие как: среднее время выполнения всего комплекса работ, выборочная дисперсия, несмещённая дисперсия, несмещённая оценка СКО, смещённая оценка СКО и построение доверительного интервала. Рассчитанное оптимальное время выполнение для каждой работы (правый колонка), вероятность успеть вовремя (значение под правой колонкой), сделан вывод по полученной вероятности.

 
	Если мы хотим пересчитать по наихудшему варианту, то нужно нажать на соответствующею галочку и нажать кнопку “Рассчитать”. Данный пример показан на Рис.24
 
Рис.__ Пользовательский интерфейс с выходными данными по наихудшему варианту
На рисунке 24 показан результат работы программы по наихудшему варианту. Выходные данные те же, когда мы используем метод имитационного моделирования. 

Выводы.
1. Программная реализация сетевого графа предусматривает: Описание, программную реализацию модели и проведение вычислительного эксперимента. 
2. В описании модели предусмотрен выбор варианта распределения для моделирования процесса – вариант равномерного распределения времени выполнения работ.
3. Для нахождения вероятности того, что все работы будут выполнены в срок, использовано выражение интеграла вероятностей Лапласа (4)  . 
 4. При выполнении вычислений получены численные статистические оценки генеральной средней продолжительности работы, дисперсии, среднеквадратического отклонения и смещённой оценка СКО.
5. Вычислены значения верхней и нижней границ доверительного интервала, в пределы которого с доверительной вероятностью 0,95 будет попадать вычисленное значение времени выполнения всего комплекса работ. 
6. Разработана компьютерная программа с использованием пакета прикладных программ Матлаб, приведенная в приложении №1. 





 
Заключение
Целью работы «Сетевое планирование в условиях неопределенности» явилось исследование вопросов сетевого планирования в условиях неопределённости.
Актуальность работы определяется следующими обстоятельствами:
- для достижения высоких результатов деятельности практически во всех сферах применяется сетевое планирование;
- для качественного выполнение сетевого планирования в реальной жизни известны далеко не все факторы, имеет место неопределенность.
В интересах решения поставленных задач выполнено:
- исследование вопросов содержания и параметров сетевого планирования;
- Проанализированы три основные метода сетевого планирования и вскрыто влияние факторов неопределенности на процесс;
- разработана компьютерная программа сетевого планирования с использованием пакета прикладных программ Матлаб;
- выполнено моделирование сетевого планирования благоустройства города Твери в 2021 году в условиях неопределённости, проведен анализ результатов моделирования.
Программа позволяет:
- получать оптимальное время выполнения каждой отдельной работы и среднее время всего комплекса работ; 
- вероятность закончить все работы в установленный срок;
- основные статистические оценки: генеральной средней продолжительности работы, выборочной дисперсии, несмещённой оценки дисперсии, среднеквадратического отклонения, смещённой оценки СКО.
Для визуализации моделируемых данных в программе реализован сетевой граф с выделением на нём критического пути. 
Программа гибкая, может работать с различными исходными данными, определять статистически достаточное число испытаний в модели, определять уровень значимости. 
Для сравнения варианта разработанной модели с «Наихудшим вариантом» разработан и запрограммирован альтернативный вариант модели. 
Таким образом, цель работы достигнута полностью, поставленные задачи решены. Разработанную программу можно применять в различных областях деятельности людей: строительство объектов, освоение нового производства продукции в промышленных/торговых компаниях, реструктуризация производства. 
